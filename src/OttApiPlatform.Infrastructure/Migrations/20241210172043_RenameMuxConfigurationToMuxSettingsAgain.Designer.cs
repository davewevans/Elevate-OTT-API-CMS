// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OttApiPlatform.Infrastructure.Persistence;

#nullable disable

namespace OttApiPlatform.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241210172043_RenameMuxConfigurationToMuxSettingsAgain")]
    partial class RenameMuxConfigurationToMuxSettingsAgain
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.AccountInfoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChannelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomDomain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LicenseKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("StorageFileNamePrefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubDomain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("VodStreamingService")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("AccountInfo");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.AssetModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ClosedCaptions")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationStatus")
                        .HasColumnType("int");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DownloadUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsTemporary")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTestAsset")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Passthrough")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StreamingServiceAssetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("StreamingServiceAssetId")
                        .IsUnique()
                        .HasFilter("[StreamingServiceAssetId] IS NOT NULL");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.AssetStorageModel", b =>
                {
                    b.Property<Guid>("AssetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StorageLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AssetId", "StorageLocationId");

                    b.HasIndex("Order")
                        .IsUnique();

                    b.HasIndex("StorageLocationId");

                    b.ToTable("AssetStorage");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.AudioModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bitrate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<bool>("Encoded")
                        .HasColumnType("bit");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("FileSize")
                        .HasColumnType("float");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PersonModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("PersonModelId");

                    b.ToTable("Audios");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.CategoryModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("ImageAssetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("SeoDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SeoTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Slug")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("ImageAssetId")
                        .IsUnique()
                        .HasFilter("[ImageAssetId] IS NOT NULL");

                    b.HasIndex("Order")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.CollectionModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BannerMobileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BannerTvAppsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BannerWebsiteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("ImageAssetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Permalink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PosterMobileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PosterTvAppsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PosterWebId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Rating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SeoTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Slug")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BannerMobileId");

                    b.HasIndex("BannerTvAppsId");

                    b.HasIndex("BannerWebsiteId");

                    b.HasIndex("ImageAssetId")
                        .IsUnique()
                        .HasFilter("[ImageAssetId] IS NOT NULL");

                    b.HasIndex("PosterMobileId");

                    b.HasIndex("PosterTvAppsId");

                    b.HasIndex("PosterWebId");

                    b.ToTable("Collections");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.CollectionsAssetModel", b =>
                {
                    b.Property<Guid>("AssetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CollectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AssetId", "CollectionId");

                    b.HasIndex("CollectionId");

                    b.HasIndex("Order")
                        .IsUnique();

                    b.ToTable("CollectionsAssets");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.ContentCategoryModel", b =>
                {
                    b.Property<Guid>("ContentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<Guid?>("SwimLaneModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ContentId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Order")
                        .IsUnique();

                    b.HasIndex("SwimLaneModelId");

                    b.ToTable("ContentCategories");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.ContentModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AllowDownload")
                        .HasColumnType("bit");

                    b.Property<Guid?>("BannerMobileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BannerTvAppsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BannerWebsiteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullDescription")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<Guid?>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PosterMobileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PosterTvAppsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PosterWebId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PreviewMediaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PrimaryMediaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SeoDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SeoTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShortDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Slug")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BannerMobileId")
                        .IsUnique()
                        .HasFilter("[BannerMobileId] IS NOT NULL");

                    b.HasIndex("BannerTvAppsId")
                        .IsUnique()
                        .HasFilter("[BannerTvAppsId] IS NOT NULL");

                    b.HasIndex("BannerWebsiteId")
                        .IsUnique()
                        .HasFilter("[BannerWebsiteId] IS NOT NULL");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PosterMobileId")
                        .IsUnique()
                        .HasFilter("[PosterMobileId] IS NOT NULL");

                    b.HasIndex("PosterTvAppsId")
                        .IsUnique()
                        .HasFilter("[PosterTvAppsId] IS NOT NULL");

                    b.HasIndex("PosterWebId")
                        .IsUnique()
                        .HasFilter("[PosterWebId] IS NOT NULL");

                    b.HasIndex("PreviewMediaId")
                        .IsUnique()
                        .HasFilter("[PreviewMediaId] IS NOT NULL");

                    b.HasIndex("PrimaryMediaId")
                        .IsUnique()
                        .HasFilter("[PrimaryMediaId] IS NOT NULL");

                    b.ToTable("Content");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.ContentPersonModel", b =>
                {
                    b.Property<Guid>("ContentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ContentId", "PersonId");

                    b.HasIndex("Order")
                        .IsUnique();

                    b.HasIndex("PersonId");

                    b.ToTable("ContentPeople");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.ContentSettingsCountryModel", b =>
                {
                    b.Property<Guid>("ContentSettingsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ContentSettingsId", "CountryId");

                    b.HasIndex("CountryId");

                    b.ToTable("ContentSettingsCountries");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.ContentSettingsModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AllowComments")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowDislikes")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowDownload")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowEmbedding")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowFavorites")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowLikes")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowMaturityRatings")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowRatings")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowReviews")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowSharing")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowUsersToCreatePlaylist")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DislikesCount")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGeoRestricted")
                        .HasColumnType("bit");

                    b.Property<bool>("LikesCount")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("RequireUsersSignInToAccessFreeContent")
                        .HasColumnType("bit");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ContentSettings");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.ContentTagModel", b =>
                {
                    b.Property<Guid>("ContentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ContentId", "TagId");

                    b.HasIndex("Order")
                        .IsUnique();

                    b.HasIndex("TagId");

                    b.ToTable("ContentTags");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.CountryModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DialCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FlagAssetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ISO2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISO3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumericCode")
                        .HasColumnType("int");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubRegion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FlagAssetId")
                        .IsUnique()
                        .HasFilter("[FlagAssetId] IS NOT NULL");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.DocumentModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("FileSize")
                        .HasColumnType("float");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AssetId")
                        .IsUnique();

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.ImageModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<double>("ImageSize")
                        .HasColumnType("float");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssetId")
                        .IsUnique();

                    b.ToTable("Images");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.LanguageModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.LiveStreamModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ButtonPurchaseText")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsMuxLiveStream")
                        .HasColumnType("bit");

                    b.Property<int>("LatencyMode")
                        .HasColumnType("int");

                    b.Property<DateTime>("LiveStreamCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LiveStreamEndedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxContinuousDuration")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("MuxLiveStreamId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PersonModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PreRegistrationText")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Rating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ReconnectWindow")
                        .HasColumnType("real");

                    b.Property<string>("RtmpUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RtmpsUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sku")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StreamKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StreamType")
                        .HasColumnType("int");

                    b.Property<string>("StreamUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TestLiveStreamPasscode")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<int>("VideoResolutionType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonModelId");

                    b.ToTable("LiveStreams");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.PersonModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bio")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SeoDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SeoTitle")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Slug")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("People");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.SeasonAssetModel", b =>
                {
                    b.Property<Guid>("AssetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeasonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EpisodeNumber")
                        .HasColumnType("int");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AssetId", "SeasonId");

                    b.HasIndex("EpisodeNumber")
                        .IsUnique();

                    b.HasIndex("SeasonId");

                    b.ToTable("SeasonAssets");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.SeasonModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ImageAssetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeasonNumber")
                        .HasColumnType("int");

                    b.Property<Guid>("SeriesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ImageAssetId")
                        .IsUnique()
                        .HasFilter("[ImageAssetId] IS NOT NULL");

                    b.HasIndex("SeasonNumber")
                        .IsUnique();

                    b.HasIndex("SeriesId");

                    b.ToTable("Seasons");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.SeriesAssetModel", b =>
                {
                    b.Property<Guid>("AssetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeriesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AssetId", "SeriesId");

                    b.HasIndex("Order")
                        .IsUnique();

                    b.HasIndex("SeriesId");

                    b.ToTable("SeriesAssets");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.SeriesModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ContentId")
                        .IsUnique();

                    b.ToTable("Series");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.StorageLocationModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("StorageLocations");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.StreamingServiceAssetModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ServiceAssetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("StreamingServiceAssets");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.SubtitleModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ClosedCaption")
                        .HasColumnType("bit");

                    b.Property<Guid>("ContentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LanguageCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Passthrough")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TrackId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContentId");

                    b.ToTable("Subtitles");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.SwimLaneContentModel", b =>
                {
                    b.Property<Guid>("ContentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SwimLaneId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<Guid?>("SwimLaneModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ContentId", "SwimLaneId");

                    b.HasIndex("Order")
                        .IsUnique();

                    b.HasIndex("SwimLaneId");

                    b.HasIndex("SwimLaneModelId");

                    b.ToTable("SwimLaneContent");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.SwimLaneModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ContentLimit")
                        .HasColumnType("int");

                    b.Property<int>("ContentType")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("SwimLaneCriteria")
                        .HasColumnType("int");

                    b.Property<int>("SwimLaneType")
                        .HasColumnType("int");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.ToTable("SwimLanes");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.TagModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.VideoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AudioBitrate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bitrate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<bool>("Encoded")
                        .HasColumnType("bit");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("FileSize")
                        .HasColumnType("float");

                    b.Property<string>("FrameRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PersonModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Resolution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("VideoBitrate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoCodec")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("PersonModelId");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.Identity.ApplicationPermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("HostVisibility")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCustomPermission")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TenantVisibility")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("AspNetPermissions", (string)null);
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.Identity.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStatic")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.Identity.ApplicationRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.Identity.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AvatarUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStatic")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuperAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuspended")
                        .HasColumnType("bit");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenTimeSpan")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .HasDatabaseName("UserNameIndex");

                    b.HasIndex("TenantId");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.Identity.ApplicationUserAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileUri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserAttachments", (string)null);
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.Identity.ApplicationUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsExcluded")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.Identity.ApplicationUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.Identity.ApplicationUserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.Identity.ApplicationUserToken", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.Mux.MuxSettingsModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CorsOrigin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Environment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnvironmentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RtmpUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RtmpsUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SigningSecret")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TokenId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TokenSecret")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MuxSettings");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.POC.Applicant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Ssn")
                        .HasColumnType("int");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.ToTable("Applicants");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.POC.Reference", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.ToTable("References");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.Report", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("QueryString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.Settings.FileStorageSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StorageType")
                        .HasColumnType("int");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("FileStorageSettings", "Settings");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.Settings.IdentitySettings.LockoutSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AllowedForNewUsers")
                        .HasColumnType("bit");

                    b.Property<int>("DefaultLockoutTimeSpan")
                        .HasColumnType("int");

                    b.Property<int>("MaxFailedAccessAttempts")
                        .HasColumnType("int");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("LockoutSettings", "Settings");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.Settings.IdentitySettings.PasswordSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("RequireDigit")
                        .HasColumnType("bit");

                    b.Property<bool>("RequireLowercase")
                        .HasColumnType("bit");

                    b.Property<bool>("RequireNonAlphanumeric")
                        .HasColumnType("bit");

                    b.Property<bool>("RequireUppercase")
                        .HasColumnType("bit");

                    b.Property<int>("RequiredLength")
                        .HasColumnType("int");

                    b.Property<int>("RequiredUniqueChars")
                        .HasColumnType("int");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("PasswordSettings", "Settings");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.Settings.IdentitySettings.SignInSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("RequireConfirmedAccount")
                        .HasColumnType("bit");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("SignInSettings", "Settings");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.Settings.IdentitySettings.UserSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AllowedUserNameCharacters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NewUsersActiveByDefault")
                        .HasColumnType("bit");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UserSettings", "Settings");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.Settings.TokenSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("AccessTokenTimeSpan")
                        .HasColumnType("float");

                    b.Property<int>("AccessTokenUoT")
                        .HasColumnType("int");

                    b.Property<double?>("RefreshTokenTimeSpan")
                        .HasColumnType("float");

                    b.Property<int>("RefreshTokenUoT")
                        .HasColumnType("int");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TokenSettings", "Settings");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.AccountInfoModel", b =>
                {
                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.CountryModel", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.AssetModel", b =>
                {
                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.LanguageModel", "Language")
                        .WithMany("Assets")
                        .HasForeignKey("LanguageId");

                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.StreamingServiceAssetModel", "StreamingServiceAsset")
                        .WithOne()
                        .HasForeignKey("OttApiPlatform.Domain.Entities.ContentManagement.AssetModel", "StreamingServiceAssetId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Language");

                    b.Navigation("StreamingServiceAsset");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.AssetStorageModel", b =>
                {
                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.AssetModel", "Asset")
                        .WithMany("AssetStorages")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.StorageLocationModel", "StorageLocation")
                        .WithMany("AssetStorages")
                        .HasForeignKey("StorageLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("StorageLocation");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.AudioModel", b =>
                {
                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.AssetModel", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.PersonModel", null)
                        .WithMany("Audios")
                        .HasForeignKey("PersonModelId");

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.CategoryModel", b =>
                {
                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.AssetModel", "Image")
                        .WithOne()
                        .HasForeignKey("OttApiPlatform.Domain.Entities.ContentManagement.CategoryModel", "ImageAssetId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Image");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.CollectionModel", b =>
                {
                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.AssetModel", "BannerMobile")
                        .WithMany()
                        .HasForeignKey("BannerMobileId");

                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.AssetModel", "BannerTvApps")
                        .WithMany()
                        .HasForeignKey("BannerTvAppsId");

                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.AssetModel", "BannerWebsite")
                        .WithMany()
                        .HasForeignKey("BannerWebsiteId");

                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.AssetModel", "Image")
                        .WithOne()
                        .HasForeignKey("OttApiPlatform.Domain.Entities.ContentManagement.CollectionModel", "ImageAssetId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.AssetModel", "PosterMobile")
                        .WithMany()
                        .HasForeignKey("PosterMobileId");

                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.AssetModel", "PosterTvApps")
                        .WithMany()
                        .HasForeignKey("PosterTvAppsId");

                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.AssetModel", "PosterWeb")
                        .WithMany()
                        .HasForeignKey("PosterWebId");

                    b.Navigation("BannerMobile");

                    b.Navigation("BannerTvApps");

                    b.Navigation("BannerWebsite");

                    b.Navigation("Image");

                    b.Navigation("PosterMobile");

                    b.Navigation("PosterTvApps");

                    b.Navigation("PosterWeb");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.CollectionsAssetModel", b =>
                {
                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.AssetModel", "Asset")
                        .WithMany("CollectionAssets")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.CollectionModel", "Collection")
                        .WithMany("CollectionAssets")
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("Collection");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.ContentCategoryModel", b =>
                {
                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.CategoryModel", "Category")
                        .WithMany("ContentCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.ContentModel", "Content")
                        .WithMany("ContentCategories")
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.SwimLaneModel", null)
                        .WithMany("ContentCategories")
                        .HasForeignKey("SwimLaneModelId");

                    b.Navigation("Category");

                    b.Navigation("Content");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.ContentModel", b =>
                {
                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.AssetModel", "BannerMobile")
                        .WithOne()
                        .HasForeignKey("OttApiPlatform.Domain.Entities.ContentManagement.ContentModel", "BannerMobileId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.AssetModel", "BannerTvApps")
                        .WithOne()
                        .HasForeignKey("OttApiPlatform.Domain.Entities.ContentManagement.ContentModel", "BannerTvAppsId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.AssetModel", "BannerWebsite")
                        .WithOne()
                        .HasForeignKey("OttApiPlatform.Domain.Entities.ContentManagement.ContentModel", "BannerWebsiteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.LanguageModel", "Language")
                        .WithMany("Contents")
                        .HasForeignKey("LanguageId");

                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.AssetModel", "PosterMobile")
                        .WithOne()
                        .HasForeignKey("OttApiPlatform.Domain.Entities.ContentManagement.ContentModel", "PosterMobileId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.AssetModel", "PosterTvApps")
                        .WithOne()
                        .HasForeignKey("OttApiPlatform.Domain.Entities.ContentManagement.ContentModel", "PosterTvAppsId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.AssetModel", "PosterWeb")
                        .WithOne()
                        .HasForeignKey("OttApiPlatform.Domain.Entities.ContentManagement.ContentModel", "PosterWebId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.AssetModel", "PreviewMedia")
                        .WithOne()
                        .HasForeignKey("OttApiPlatform.Domain.Entities.ContentManagement.ContentModel", "PreviewMediaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.AssetModel", "PrimaryMedia")
                        .WithOne()
                        .HasForeignKey("OttApiPlatform.Domain.Entities.ContentManagement.ContentModel", "PrimaryMediaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BannerMobile");

                    b.Navigation("BannerTvApps");

                    b.Navigation("BannerWebsite");

                    b.Navigation("Language");

                    b.Navigation("PosterMobile");

                    b.Navigation("PosterTvApps");

                    b.Navigation("PosterWeb");

                    b.Navigation("PreviewMedia");

                    b.Navigation("PrimaryMedia");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.ContentPersonModel", b =>
                {
                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.ContentModel", "Content")
                        .WithMany("ContentPeople")
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.PersonModel", "Person")
                        .WithMany("ContentPeople")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Content");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.ContentSettingsCountryModel", b =>
                {
                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.ContentSettingsModel", "ContentSettings")
                        .WithMany("RestrictedCountries")
                        .HasForeignKey("ContentSettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.CountryModel", "Country")
                        .WithMany("RestrictedCountries")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContentSettings");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.ContentTagModel", b =>
                {
                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.ContentModel", "Content")
                        .WithMany("ContentTags")
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.TagModel", "Tag")
                        .WithMany("ContentTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Content");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.CountryModel", b =>
                {
                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.AssetModel", "FlagAsset")
                        .WithOne()
                        .HasForeignKey("OttApiPlatform.Domain.Entities.ContentManagement.CountryModel", "FlagAssetId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FlagAsset");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.DocumentModel", b =>
                {
                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.AssetModel", "Asset")
                        .WithOne("Document")
                        .HasForeignKey("OttApiPlatform.Domain.Entities.ContentManagement.DocumentModel", "AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.ImageModel", b =>
                {
                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.AssetModel", "Asset")
                        .WithOne("Image")
                        .HasForeignKey("OttApiPlatform.Domain.Entities.ContentManagement.ImageModel", "AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.LiveStreamModel", b =>
                {
                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.PersonModel", null)
                        .WithMany("LiveStreams")
                        .HasForeignKey("PersonModelId");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.SeasonAssetModel", b =>
                {
                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.AssetModel", "Asset")
                        .WithMany("SeasonAssets")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.SeasonModel", "Season")
                        .WithMany("SeasonAssets")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("Season");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.SeasonModel", b =>
                {
                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.AssetModel", "Image")
                        .WithOne()
                        .HasForeignKey("OttApiPlatform.Domain.Entities.ContentManagement.SeasonModel", "ImageAssetId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.SeriesModel", "Series")
                        .WithMany("Seasons")
                        .HasForeignKey("SeriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");

                    b.Navigation("Series");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.SeriesAssetModel", b =>
                {
                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.AssetModel", "Asset")
                        .WithMany("SeriesAssets")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.SeriesModel", "Series")
                        .WithMany("SeriesAssets")
                        .HasForeignKey("SeriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("Series");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.SeriesModel", b =>
                {
                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.ContentModel", "Content")
                        .WithOne()
                        .HasForeignKey("OttApiPlatform.Domain.Entities.ContentManagement.SeriesModel", "ContentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Content");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.SubtitleModel", b =>
                {
                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.ContentModel", "Content")
                        .WithMany("Subtitles")
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Content");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.SwimLaneContentModel", b =>
                {
                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.ContentModel", "Content")
                        .WithMany("SwimLaneContent")
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.CategoryModel", "SwimLane")
                        .WithMany("SwimLaneContent")
                        .HasForeignKey("SwimLaneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.SwimLaneModel", null)
                        .WithMany("SwimLaneContent")
                        .HasForeignKey("SwimLaneModelId");

                    b.Navigation("Content");

                    b.Navigation("SwimLane");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.VideoModel", b =>
                {
                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.AssetModel", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OttApiPlatform.Domain.Entities.ContentManagement.PersonModel", null)
                        .WithMany("Videos")
                        .HasForeignKey("PersonModelId");

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.Identity.ApplicationPermission", b =>
                {
                    b.HasOne("OttApiPlatform.Domain.Entities.Identity.ApplicationPermission", "Parent")
                        .WithMany("Permissions")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.Identity.ApplicationRoleClaim", b =>
                {
                    b.HasOne("OttApiPlatform.Domain.Entities.Identity.ApplicationRole", "Role")
                        .WithMany("RoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.Identity.ApplicationUser", b =>
                {
                    b.HasOne("OttApiPlatform.Domain.Entities.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.Identity.ApplicationUserAttachment", b =>
                {
                    b.HasOne("OttApiPlatform.Domain.Entities.Identity.ApplicationUser", "User")
                        .WithMany("UserAttachments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.Identity.ApplicationUserClaim", b =>
                {
                    b.HasOne("OttApiPlatform.Domain.Entities.Identity.ApplicationUser", "User")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.Identity.ApplicationUserLogin", b =>
                {
                    b.HasOne("OttApiPlatform.Domain.Entities.Identity.ApplicationUser", "User")
                        .WithMany("Logins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.Identity.ApplicationUserRole", b =>
                {
                    b.HasOne("OttApiPlatform.Domain.Entities.Identity.ApplicationRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OttApiPlatform.Domain.Entities.Identity.ApplicationUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.Identity.ApplicationUserToken", b =>
                {
                    b.HasOne("OttApiPlatform.Domain.Entities.Identity.ApplicationUser", "User")
                        .WithMany("Tokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.POC.Reference", b =>
                {
                    b.HasOne("OttApiPlatform.Domain.Entities.POC.Applicant", "Applicant")
                        .WithMany("References")
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Applicant");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.AssetModel", b =>
                {
                    b.Navigation("AssetStorages");

                    b.Navigation("CollectionAssets");

                    b.Navigation("Document");

                    b.Navigation("Image");

                    b.Navigation("SeasonAssets");

                    b.Navigation("SeriesAssets");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.CategoryModel", b =>
                {
                    b.Navigation("ContentCategories");

                    b.Navigation("SwimLaneContent");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.CollectionModel", b =>
                {
                    b.Navigation("CollectionAssets");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.ContentModel", b =>
                {
                    b.Navigation("ContentCategories");

                    b.Navigation("ContentPeople");

                    b.Navigation("ContentTags");

                    b.Navigation("Subtitles");

                    b.Navigation("SwimLaneContent");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.ContentSettingsModel", b =>
                {
                    b.Navigation("RestrictedCountries");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.CountryModel", b =>
                {
                    b.Navigation("RestrictedCountries");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.LanguageModel", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("Contents");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.PersonModel", b =>
                {
                    b.Navigation("Audios");

                    b.Navigation("ContentPeople");

                    b.Navigation("LiveStreams");

                    b.Navigation("Videos");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.SeasonModel", b =>
                {
                    b.Navigation("SeasonAssets");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.SeriesModel", b =>
                {
                    b.Navigation("Seasons");

                    b.Navigation("SeriesAssets");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.StorageLocationModel", b =>
                {
                    b.Navigation("AssetStorages");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.SwimLaneModel", b =>
                {
                    b.Navigation("ContentCategories");

                    b.Navigation("SwimLaneContent");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.ContentManagement.TagModel", b =>
                {
                    b.Navigation("ContentTags");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.Identity.ApplicationPermission", b =>
                {
                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.Identity.ApplicationRole", b =>
                {
                    b.Navigation("RoleClaims");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.Identity.ApplicationUser", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Logins");

                    b.Navigation("Tokens");

                    b.Navigation("UserAttachments");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("OttApiPlatform.Domain.Entities.POC.Applicant", b =>
                {
                    b.Navigation("References");
                });
#pragma warning restore 612, 618
        }
    }
}
